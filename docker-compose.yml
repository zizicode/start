version: '3.8'

services:
  # Tailscale Client Service
  tailscale:
    image: tailscale/tailscale:latest
    container_name: tailscale-client
    hostname: ${TS_HOSTNAME:-ubuntu-server}
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
      - NET_RAW
    volumes:
      - /var/lib/tailscale:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    environment:
      - TS_AUTHKEY=${TS_AUTHKEY}
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SOCKET=/var/lib/tailscale/tailscaled.sock
      - TS_EXTRA_ARGS=--advertise-tags=tag:server --ssh
    network_mode: host
    privileged: true

  # Your RC-APP-API-V1 Service
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: rc-app-api-v1
    hostname: api-server
    restart: unless-stopped
    ports:
      - "${API_PORT:-3001}:${API_PORT:-3001}"
    volumes:
      - ./api/logs:/app/logs
      - ./api/uploads:/app/uploads
    environment:
      - NODE_ENV=production
      - PORT=${API_PORT:-3001}
      - API_VERSION=${API_VERSION:-v1}
      - DATABASE_URL=${DATABASE_URL}
    depends_on:
      - tailscale
    networks:
      - tailscale-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-3001}/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Portainer Service
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    hostname: portainer-server
    restart: unless-stopped
    ports:
      - "${PORTAINER_PORT:-9000}:9000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PORTAINER_DATA_PATH:-./portainer_data}:/data
    networks:
      - tailscale-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Proxy Service (Optional - for internal routing)
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    hostname: nginx-server
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - api
      - portainer
    networks:
      - tailscale-network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  tailscale-network:
    name: ${NETWORK_NAME:-tailscale-network}
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  tailscale_data:
    name: tailscale_data
  portainer_data:
    name: portainer_data