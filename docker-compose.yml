version: "3.8"

services:
  api:
    build: ./api
    container_name: api
    environment:
      - DB_HOST=postgres
      - DB_USER=rctv
      - DB_PASSWORD=rctv@01
      - DB_NAME=media_db
      - DB_PORT=5432
      - PORT=4000
    volumes:
      - ./uploads:/usr/src/app/uploads
    depends_on:
      - postgres
    networks:
      - tunnel-net
    expose:
      - "4000"

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: rctv
      POSTGRES_PASSWORD: rctv@01
      POSTGRES_DB: media_db
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - tunnel-net
    expose:
      - "5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@correo.com
      PGADMIN_DEFAULT_PASSWORD: tu_contrase√±a
    networks:
      - tunnel-net
    ports:
      - "8080:80"   # web pgAdmin accesible desde el navegador

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - tunnel-net
    ports:
      - "9000:9000"
    expose:
      - "9000"

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    command: tunnel run --token "${TUNNEL_TOKEN}"
    volumes:
      - ./cloudflared:/etc/cloudflared
    networks:
      - tunnel-net
    depends_on:
      - api
      - portainer
      - postgres
      - pgadmin

networks:
  tunnel-net:
    driver: bridge

volumes:
  pgdata:
  portainer_data:
